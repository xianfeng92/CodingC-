#include<iostream>

using namespace std;

// !! 在所有函数外部定义的变量称为全局变量,它的作用域默认是整个程序，也就是所有的源文件，包括 .cpp 和 .h 文件
int e,f;

// 静态全局变量---静态全局变量则限制了其作用域，即只在定义该变量的源文件内有效，在同一源程序的其它源文件中不能使用它
static int result = 0;

// !! 定义在函数内部的变量称为局部变量，它的作用域仅限于函数内部，离开该函数后就是无效的，再使用就会报错
int fn(int a)
{
    // static局部变量的优点是在函数范围之外它是不可用的，所以它不可能被轻易改变。这会使错误局部化
    static int value = 0; // 静态局部变量
    int b = 0 int c = 0;
    return a + b + c; // a,b,c 仅在函数 fn() 内有效
}

int main(int argc, char **argv)
{
    int m, n; // m,n 仅仅在 main() 函数内有效
    return 0;
}

// !! 全局变量和局部变量的区别
// 1. 局部变量是声明在块或者函数内部的变量。局部变量的作用域局限于该块或者函数。局部变量如果没有初始化，将包含垃圾数据
// 2. 全局变量是在所有块和函数之前声明的变量。全局变量对所有在它之后声明的函数有效。全局变量有默认值初始化，如 0

// 注意：如果要调用另外一个文件中的全局变量，如果再声明一个同名的全局变量，那么编译器会因为重名报错，这个时候就要使用 extern 变量。
// extern 声明告诉编译器这个变量的定义在其他文件中，所以并不会为它分配内存。

// !! 全局变量，静态局部变量，静态全局变量都在静态存储区分配空间，而局部变量在栈里分配空间
