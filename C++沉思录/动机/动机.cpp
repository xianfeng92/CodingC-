// !! 动机

// !! 抽象是有选择的忽略

比如你要驾驶一辆汽车，但你又必须时时关注每样东西是如何运行的: 发动机、传动装置、方向盘和车轮之间的连接等；那么你要么永远没法开动这辆车，
要么一上路就马上发生事故。

与此类似，'编程也依赖于一种选择，选择忽略什么和何时忽略'

1. C++ 很有趣，它允许我们进行范围极其宽广的抽象。。C++ 使我们更容易把程序看作抽象的集合，同时也隐藏了那些用户无须关心的抽象工作细节

2. C++ 之所以有趣的第二个原因是，它设计时考虑了特殊用户群的需求

   '许多语言被设计用于探索特定的理论原理，还有些是面向特定的应用种类'。C++ 不然，它使程序员可以以一种更抽象的风格来编程，与此同时，又
   '保留了 C 中那些有用的和已经深入人心的特色'。因此，C++ 保留了不少 C 的优点，比如偏重执行速度快、可移植性强、与硬件和其他软件系统
    的接口简单等。

// !! C++ 是为那些信奉实用主义的用户群准备的

C 和 C++ 程序员通常都要处理杂乱而现实的问题；他们需要能够解决这些问题的工具。这种实用主义在某种程度上体现了 C++ 语言及其使用者的灵活性。例如
，C++程序员总是为了特定的目的编写不完整的抽象：他们会为了解决特定问题设计一个很小的类，而不在乎这个类是否提供所有用户希望的所有功能。如果这个类
够用了，则他们可以对那些不尽如人意的地方视而不见。'有的情况下，现在的折衷方案比未来的理想方案好得多'。但是，实用主义和懒惰是有区别的。虽然很可能把
C++ 程序写得极其难以维护，但是'也可以用 C++ 把问题精心划分为分割良好的模块，使模块与模块之间的信息得到良好的隐藏'。

// !! 本书坚持以两个思想为核心：实用和抽象








