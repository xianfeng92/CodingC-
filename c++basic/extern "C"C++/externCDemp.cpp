
using namespace std;

int main(int argc, char **argv)
{
    // !! C++ 与 C 编译区别
    // 在 C++ 中常在头文件见到 extern "C" 修饰函数，那有什么作用呢？ 是用于 C++ 链接在 C 语言模块中定义的函数
    // C++ 虽然兼容 C，但 C++ 文件中函数编译后生成的符号与 C 语言生成的不同。因为 C++ 支持函数重载，C++ 函数编译后生成的符号带有
    // 函数参数类型的信息，而 C 则没有。例如 int add(int a, int b) 函数经过 C++ 编译器生成 .o 文件后，add 会变成形如 add_int_int 之类的, 
    // 而 C 的话则会是形如_add, 就是说：相同的函数，在 C 和 C++ 中，编译后生成的符号不同

    // 这就导致一个问题：如果 C++ 中使用 C 语言实现的函数，在编译链接的时候，会出错，提示找不到对应的符号。此时 extern "C" 就起作用了：
    // 告诉链接器去寻找 _add 这类的 C 语言符号，而不是经过 C++ 修饰的符号。

}