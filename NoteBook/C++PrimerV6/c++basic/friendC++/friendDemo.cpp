#include <string>


using namespace std;


int main(int argc, char **argv)
{
    // !!友元提供了不同类的成员函数之间、类的成员函数与一般函数之间进行数据共享的机制
    // 通过友元，一个不同函数或另一个类中的成员函数可以访问类中的私有成员和保护成员
    // c++ 中的友元为封装隐藏这堵不透明的墙开了一个小孔，外界可以通过这个小孔窥视内部的秘密
    // 友元的正确使用能提高程序的运行效率，但同时也破坏了类的封装性和数据的隐藏性，导致程序可维护性变差


   // !! 友元函数
   // 友元函数是可以直接访问类的私有成员的非成员函数。它是定义在类外的普通函数(不属于任何类)，但需要在类的定义中加以声明，
   // 声明时只需在友元的名称前加上关键字 friend



   // !! 友元类
   // 友元类的所有成员函数都是另一个类的友元函数，都可以访问另一个类中的隐藏信息（包括私有成员和保护成员）
   // friend class 类名(类名必须是程序中的一个已定义过的类)



   // !! 为什么引入友元函数----在实现类之间数据共享时，减少系统开销，提高效率

   // !! 什么时候使用友元函数
   // 1. 运算符重载的某些场合需要使用友元
   // 2. 两个类需要共享数据时




   



}