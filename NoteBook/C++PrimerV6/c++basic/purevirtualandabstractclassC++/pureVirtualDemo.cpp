

using namespace std;

/**
 * @brief 抽象类
 */
class Test
{
    // Data members of class 
public: 
    // Pure Virtual Function 
    virtual void show() = 0; 

    /* Other members */
};

int main(int argc, char **argv)
{
    // 1. 纯虚函数与抽象类
    // !! C++ 中的纯虚函数(或抽象函数)是我们没有实现的虚函数！我们只需声明它!通过声明中赋值 0 来声明纯虚函数


    Test test;// error 抽象类，不能创建对象

    Test *pTest;// ok 可以定义抽象类的指针


    // 2. 实现抽象类
    // 抽象类中：在成员函数内可以调用纯虚函数，在构造函数/析构函数内部不能使用纯虚函数
    // 如果一个类从抽象类派生而来，它必须实现了基类中的所有纯虚函数，才能成为非抽象类

    // !! 3.重要点¶
    // 1. 纯虚函数使一个类变成抽象类
    // 2. 抽象类类型的指针和引用
    // 3. 如果我们不在派生类中覆盖纯虚函数，那么派生类也会变成抽象类。
    // 4. 抽象类可以有构造函数s
    // 5. 构造函数不能是虚函数，而析构函数可以是虚析构函数
    // !! 6. 当基类指针指向派生类对象并删除对象时，我们可能希望调用适当的析构函数。如果析构函数不是虚拟的，则只能调用基类析构函数
}